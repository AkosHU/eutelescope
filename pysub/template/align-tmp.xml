<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Tue May  5 11:09:08 2009

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <processor name="Align"/>
      <!--processor name="LoadAlign"/-->
      <!--processor name="PreAlign"/-->
      <!--processor name="Mille"/-->
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> results/80gev-new-hit.slcio </parameter>
      <parameter name="GearXMLFile" value="gear_telescope_depfet_2008.xml"/>
      <parameter name="MaxRecordNumber" value="10000000"/>
      <parameter name="SkipNEvents" value="0000"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="MESSAGE"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="histo/80gev-align-histo"/>
  <!-- type of output file xml (default) or root ( only OpenScientist)-->
  <parameter name="FileType" type="string" value="root"/>
</processor>

 <processor name="Align" type="EUTelMille">
 <!--EUTelMille uses the MILLE program to write data files for MILLEPEDE II.-->
  <!--Hit collection name-->
  <parameter name="HitCollectionName" type="string" lcioInType="TrackerHit"> hit_eta3x3 </parameter>
  <!--Track collection name-->
  <parameter name="TrackCollectionName" type="string" lcioInType="Track"> fittracks </parameter>
  <!--Number of alignment constants used. Available mode are: 1 - shifts in the X and Y directions and a rotation around the Z axis, 2 - only shifts in the X and Y directions-->
  <parameter name="AlignMode" type="int" value="1"/>
  <!--This is the name of the LCIO file name with the output alignmentconstants (add .slcio)-->
  <parameter name="AlignmentConstantLCIOFile" type="string" value="db/80gev-align-db.slcio"/>
  <!--Name of the Millepede binary file.-->
  <parameter name="BinaryFilename" type="string" value="results/80gev-align-mille.bin"/>
  <!--Maximal allowed distance between hits entering the fit per 10 cm space between the planes.-->
  <parameter name="DistanceMax" type="float" value="20000"/>
  <!--Exclude planes from fit.-->
  <!--parameter name="ExcludePlanes" type="IntVec"> </parameter-->
  <!--Generate a steering file for the pede program.-->
  <parameter name="GeneratePedeSteerfile" type="int" value="1"/>
  <!--Selects the source of input hits. 0 - hits read from hitfile with simple trackfinding. 1 - hits read from output of tracking processor. 2 - Test mode. Simple internal simulation and simple trackfinding.-->
  <parameter name="InputMode" type="int" value="0"/>
  <!--Maximal number of track candidates.-->
  <parameter name="MaxTrackCandidates" type="int" value="100000"/>
  <!--Use only events with one hit in every plane.-->
  <parameter name="OnlySingleHitEvents" type="int" value="0"/>
  <!--Use only events with one track candidate.-->
  <parameter name="OnlySingleTrackEvents" type="int" value="0"/>
  <!--Name of the steering file for the pede program.-->
  <parameter name="PedeSteerfileName" type="string" value="80gev-pede-steer.txt"/>
  <!--Start values for the alignment for the angle gamma.-->
  <!--parameter name="PedeUserStartValuesGamma" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the X direction.-->
  <!--parameter name="PedeUserStartValuesX" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the Y direction.-->
  <!--parameter name="PedeUserStartValuesY" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Maximal values of the hit residuals in the X direction for a track-->
  <parameter name="ResidualsXMax" type="FloatVec"> 5000 20 5000 5000 5000 5000 </parameter>
  <!--Minimal values of the hit residuals in the X direction for a track-->
  <parameter name="ResidualsXMin" type="FloatVec" value="-5000 -10 -5000 -5000 -5000 -5000 "/>
  <!--Maximal values of the hit residuals in the Y direction for a track-->
  <parameter name="ResidualsYMax" type="FloatVec" value="5000 100 5000 5000 5000 5000 "/>
  <!--Minimal values of the hit residuals in the Y direction for a track-->
  <parameter name="ResidualsYMin" type="FloatVec" value="-5000 70 -5000 -5000 -5000 -5000 "/>
  <!--Execute the pede program using the generated steering file.-->
  <parameter name="RunPede" type="int" value="1 "/>
  <!--Resolution of the telescope for Millepede.-->
  <parameter name="TelescopeResolution" type="float" value="10 "/>
  <!--Rotation around the x axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorAlpha" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Rotation around the y axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorBeta" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Rotation around the z axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorGamma" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Resolution assumed for the sensors in test mode.-->
  <!--parameter name="TestModeSensorResolution" type="float" value="3"/-->
  <!--X shifts of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorXShifts" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Y shifts of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorYShifts" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Z positions of the sensors in test mode.-->
  <!--parameter name="TestModeSensorZPositions" type="FloatVec"> 20000 40000 60000 80000 100000 120000 </parameter-->
  <!--Width of the track slope distribution in the x direction-->
  <!--parameter name="TestModeXTrackSlope" type="float" value="0.0005"/-->
  <!--Width of the track slope distribution in the y direction-->
  <!--parameter name="TestModeYTrackSlope" type="float" value="0.0005"/-->
  <!--Give start values for pede by hand (0 - automatic calculation of start values, 1 - start values defined by user).-->
  <!--parameter name="UsePedeUserStartValues" type="int" value="0"/-->
  <!--Use cuts on the residuals to reduce the combinatorial background. 0 for off (default), 1 for on-->
  <parameter name="UseResidualCuts" type="int" value="1"/>
</processor>

 <processor name="LoadAlign" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment db/mimoroma-align-step1-db.slcio alignment </parameter>
</processor>

 <processor name="PreAlign" type="EUTelApplyAlignmentProcessor">
 <!--Apply to the input hit the alignment corrections-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> correctedHit </parameter>
  <!--Available methods are:
 0 --> shift only 
 1 --> rotation first 
 2 --> shift first -->
  <parameter name="CorrectionMethod" type="int" value="1"/>
  <!--Enable or disable histograms-->
  <!--parameter name="HistogramSwitch" type="bool" value="true"/-->
</processor>

 <processor name="Mille" type="EUTelMille">
 <!--EUTelMille uses the MILLE program to write data files for MILLEPEDE II.-->
  <!--Hit collection name-->
  <parameter name="HitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
  <!--Track collection name-->
  <parameter name="TrackCollectionName" type="string" lcioInType="Track"> fittracks </parameter>
  <!--Number of alignment constants used. Available mode are: 1 - shifts in the X and Y directions and a rotation around the Z axis, 2 - only shifts in the X and Y directions-->
  <parameter name="AlignMode" type="int" value="1"/>
  <!--This is the name of the LCIO file name with the output alignmentconstants (add .slcio)-->
  <parameter name="AlignmentConstantLCIOFile" type="string" value="db/tb-desyzs-align-db.slcio"/>
  <!--Name of the Millepede binary file.-->
  <parameter name="BinaryFilename" type="string" value="results/tb-desyzs-mille.bin"/>
  <!--Maximal allowed distance between hits entering the fit per 10 cm space between the planes.-->
  <parameter name="DistanceMax" type="float" value="5000"/>
  <!--Exclude planes from fit.-->
  <!--parameter name="ExcludePlanes" type="IntVec"> </parameter-->
  <!--Generate a steering file for the pede program.-->
  <parameter name="GeneratePedeSteerfile" type="int" value="1"/>
  <!--Selects the source of input hits. 0 - hits read from hitfile with simple trackfinding. 1 - hits read from output of tracking processor. 2 - Test mode. Simple internal simulation and simple trackfinding.-->
  <!--parameter name="InputMode" type="int" value="0"/-->
  <!--Maximal number of track candidates.-->
  <parameter name="MaxTrackCandidates" type="int" value="2000"/>
  <!--Use only events with one hit in every plane.-->
  <parameter name="OnlySingleHitEvents" type="int" value="0"/>
  <!--Use only events with one track candidate.-->
  <parameter name="OnlySingleTrackEvents" type="int" value="0"/>
  <!--Name of the steering file for the pede program.-->
  <parameter name="PedeSteerfileName" type="string" value="tb-desyzs-align-steer.txt"/>
  <!--Start values for the alignment for the angle gamma.-->
  <!--parameter name="PedeUserStartValuesGamma" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the X direction.-->
  <!--parameter name="PedeUserStartValuesX" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the Y direction.-->
  <!--parameter name="PedeUserStartValuesY" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Maximal values of the hit residuals in the X direction for a track-->
  <!--parameter name="ResidualsXMax" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Minimal values of the hit residuals in the X direction for a track-->
  <!--parameter name="ResidualsXMin" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Maximal values of the hit residuals in the Y direction for a track-->
  <!--parameter name="ResidualsYMax" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Minimal values of the hit residuals in the Y direction for a track-->
  <!--parameter name="ResidualsYMin" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Execute the pede program using the generated steering file.-->
  <!--parameter name="RunPede" type="int" value="0"/-->
  <!--Resolution of the telescope for Millepede.-->
  <parameter name="TelescopeResolution" type="float" value="5"/>
  <!--Rotation around the x axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorAlpha" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Rotation around the y axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorBeta" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Rotation around the z axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorGamma" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Resolution assumed for the sensors in test mode.-->
  <!--parameter name="TestModeSensorResolution" type="float" value="3"/-->
  <!--X shifts of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorXShifts" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Y shifts of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorYShifts" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Z positions of the sensors in test mode.-->
  <!--parameter name="TestModeSensorZPositions" type="FloatVec"> 20000 40000 60000 80000 100000 120000 </parameter-->
  <!--Width of the track slope distribution in the x direction-->
  <!--parameter name="TestModeXTrackSlope" type="float" value="0.0005"/-->
  <!--Width of the track slope distribution in the y direction-->
  <!--parameter name="TestModeYTrackSlope" type="float" value="0.0005"/-->
  <!--Give start values for pede by hand (0 - automatic calculation of start values, 1 - start values defined by user).-->
  <!--parameter name="UsePedeUserStartValues" type="int" value="0"/-->
  <!--Use cuts on the residuals to reduce the combinatorial background. 0 for off (default), 1 for on-->
  <!--parameter name="UseResidualCuts" type="int" value="0"/-->
</processor>

</marlin>
