<!--##########################################
    #                                        #
    #     Example steering file for marlin   #
    #                                        #
    ##########################################-->


<marlin>
 <execute>
  <processor name="MyAIDAProcessor"/>
  <processor name="MyEUTelTestFitter"/>  
  <processor name="MyEUTelFitHistograms"/>  
  <processor name="MyEUTelOutputProcessor"/>  
 </execute>

 <global>
  <parameter name="LCIOInputFiles"> data/5pl_3gev-hit.slcio </parameter>
  <!-- limit the number of processed records (run+evt): -->  
  <parameter name="MaxRecordNumber" value="1000000" />  
  <parameter name="SkipNEvents" value="0" />  
  <parameter name="SupressCheck" value="false" />  
  <parameter name="GearXMLFile"> gear_5pl.xml </parameter>  
  <parameter name="Verbosity" options="DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT"> DEBUG  </parameter> 
 </global>

 <processor name="MyAIDAProcessor" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int">1 </parameter>
  <!-- filename without extension-->
  <parameter name="FileName" type="string">aida_file </parameter>
  <!-- type of output file xml (default) or root ( only OpenScientist)-->
  <parameter name="FileType" type="string">xml </parameter>
</processor>

 <processor name="MyCEDViewer" type="CEDViewer">
 <!--CEDViewer: event display of LCIO objects  - based on CED by A.Zhelezov.-->
  <!--collection to be displayed ( ColName, marker type[0-2], size)-->
  <!--parameter name="DrawCollection" type="StringVec">DrawCollection 0 3  </parameter-->
</processor>

 <processor name="MyEUTelEventViewer" type="EUTelEventViewer">
 <!--Event display-->
  <!--Detector Model-->
  <parameter name="DetectorModel" type="int">99999 </parameter>
  <!--Layer for Tracker Hits-->
  <parameter name="LayerTrackerHit" type="int">-1 </parameter>
  <!--Layer for Tracks-->
  <parameter name="LayerTracks" type="int">-1 </parameter>
  <!--Track collection names-->
  <parameter name="TrackCollections" type="StringVec" lcioInType="Track">testfittrack  </parameter>
  <!--Tracker hit collection names-->
  <parameter name="TrackerHitCollections" type="StringVec" lcioInType="TrackerHit">hit testfithit  </parameter>
  <!--Wait for Keyboard before proceed-->
  <parameter name="WaitForKeyboard" type="int">1 </parameter>
</processor>

 <processor name="MyEUTelHistogramMaker" type="EUTelHistogramMaker">
 <!--EUTelHistogramMaker fills reference and control histograms-->
  <!--The list of cluster N to be filled.For example 7 means filling the cluster spectra with the 7 most significant pixels-->
  <!--parameter name="ClusterN" type="IntVec">4 9 14 19 25  </parameter-->
  <!--The list of cluster NxN to be filled.For example 3 means filling the 3x3 histogram spectrum-->
  <!--parameter name="ClusterNxN" type="IntVec">3 5  </parameter-->
  <!--This is the name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string">histoinfo.xml </parameter>
  <!--The name of the noise collection.
Needed to fill in noise related histograms-->
  <!--parameter name="NoiseCollectionName" type="string">noise </parameter-->
  <!--Input tracker pulse collection-->
  <parameter name="PulseCollectionName" type="string" lcioInType="TrackerPulse">pulse </parameter>
  <!--The name of the status collection.
Needed to fill in noise related histograms-->
  <!--parameter name="StatusCollectionName" type="string">status </parameter-->
</processor>

 <processor name="MyEUTelOutputProcessor" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <!--parameter name="DropCollectionNames" type="StringVec">TPCHits HCalHits  </parameter-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec">SimTrackerHit SimCalorimeterHit  </parameter-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string">outputfile.slcio </parameter>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string">None </parameter>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool">true </parameter>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int">1992294 </parameter-->
</processor>

 <processor name="MyEUTelTestFitter" type="EUTelTestFitter">
 <!--Analytical track fitting processor for EUDET telescope-->
  <!--Ids of layers for which alignment corrections are given-->
  <parameter name="AlignLayerIDs" type="IntVec"> 1 2 3 4 </parameter>
  <!--Alignment corrections in X for these layers-->
  <parameter name="AlignLayerShiftX" type="FloatVec"> -0.2134 -0.2769 -0.4504 0.1117 </parameter>
  <!--Alignment corrections in Y for these layers-->
  <parameter name="AlignLayerShiftY" type="FloatVec"> -0.1538 0.4887 -0.1565 -0.3131 </parameter>
  <!--Rotation around Z for layer alignment-->
  <parameter name="AlignLayerRotZ" type="FloatVec"> 0.0135 0.0042 0.0007 0.0023 </parameter>
  <!--Allowed number of missing hits in the track-->
  <parameter name="AllowMissingHits" type="int">1 </parameter>
  <!--Allowed number of hits removed from the track-->
  <parameter name="AllowSkipHits" type="int">1 </parameter>
  <!--Assumed angular spread of the beam [rad]-->
  <parameter name="BeamSpread" type="double">0.001 </parameter>
  <!--Maximum Chi2 for accepted track fit-->
  <parameter name="Chi2Max" type="double">300</parameter>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int">1 </parameter>
  <!--Beam energy [GeV]-->
  <parameter name="Ebeam" type="double">3 </parameter>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string">histoinfo.xml </parameter>
  <!--Name of the input TrackerHit collection-->
  <!--parameter name="InputCollectionName" type="string" lcioInType="TrackerHit">hit_eta3x3</parameter-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerHit">hit</parameter>
  <!--Flag for storing input (measured) hits in track-->
  <parameter name="InputHitsInTrack" type="bool">true </parameter>
  <!--Maximum number of considered hits per plane-->
  <parameter name="MaxPlaneHits" type="int">10 </parameter>
  <!--Chi2 penalty for missing hit in the track-->
  <parameter name="MissingHitPenalty" type="double">100 </parameter>
  <!--Collection name for fitted particle hits (positions)-->
  <parameter name="OutputHitCollectionName" type="string">testfithits </parameter>
  <!--Flag for storing output (fitted) hits in track-->
  <parameter name="OutputHitsInTrack" type="bool">true </parameter>
  <!--Collection name for fitted tracks-->
  <parameter name="OutputTrackCollectionName" type="string">testfittracks </parameter>
  <!--Flag for searching multiple tracks in events with multiple hits-->
  <parameter name="SearchMultipleTracks" type="bool">true </parameter>
  <!--Chi2 penalty for removing hit from the track-->
  <parameter name="SkipHitPenalty" type="double">100 </parameter>
  <!--Ids of layers which should NOT be included in the fit-->
  <!--parameter name="SkipLayerIDs" type="IntVec"> 1001 1002 2001 2002 </parameter-->
  <!--Flag for using beam direction constraint in the fit-->
  <parameter name="UseBeamConstraint" type="bool">false </parameter>
  <!--Flag for including DUT measurement in the fit-->
  <parameter name="UseDUT" type="bool">true </parameter>
  <!--Flag for using nominal resolution instead of position errors-->
  <parameter name="UseNominalResolution" type="bool">true </parameter>
</processor>


 <processor name="MyEUTelFitHistograms" type="EUTelFitHistograms">
 <!--Histogram track fit results-->
  <!--ID of the layer used for beam based alignment check-->
  <parameter name="BeamReferenceID" type="int">0 </parameter>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int">1 </parameter>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string">histoinfo.xml </parameter>
  <!--Name of the input Track collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="Track">testfittracks </parameter>
  <!--IDs of two layers used to check internal telescope alignment-->
  <parameter name="TelescopeReferenceIDs" type="IntVec">0 1  </parameter>
</processor>

</marlin>
