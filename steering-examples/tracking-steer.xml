<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Thu May 24 15:18:27 2007

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin>

   <global>
      <parameter name="LCIOInputFiles"> analysis-output.slcio </parameter>
      <parameter name="GearXMLFile" value="gear-telescope.xml"/>
      <parameter name="MaxRecordNumber" value="5001"/>
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="MESSAGE"/>
   </global>

   <execute>
      <processor name="AIDAHistogramInterface"/>
      <processor name="LoadEtaCollections"/>
      <processor name="ApplyGeometry"/>
      <processor name="SaveOutputFile"/>
   </execute>

 <processor name="AIDAHistogramInterface" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="tracking-histo"/>
  <!-- type of output file xml (default) or root ( only OpenScientist)-->
  <parameter name="FileType" type="string" value="root"/>
</processor>

 <processor name="LoadEtaCollections" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> xEtaCondition etafile-db.slcio xEtaCondition </parameter>
  <parameter name="SimpleFileHandler" type="StringVec"> yEtaCondition etafile-db.slcio yEtaCondition </parameter>
</processor>

 <processor name="ApplyGeometry" type="EUTelHitMaker">
 <!--EUTelHitMaker is responsible to translate cluster centers from the local frame of reference to the external frame of reference using the GEAR geometry description-->
  <!--Cluster (pulse) collection name-->
  <parameter name="PulseCollectionName" type="string" lcioInType="TrackerPulse"> cluster </parameter>
  <!--Hit collection name-->
  <parameter name="HitCollectionName" type="string" lcioOutType="TrackerHit"> hit </parameter>
  <!--The name of the collection containing the eta function-->
  <parameter name="EtaCollectionName" type="StringVec"> xEta yEta </parameter>
  <!--Enable (==1) or disable eta correction-->
  <parameter name="EtaSwitch" type="int" value="1"/>
</processor>

 <processor name="SaveOutputFile" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <!--parameter name="DropCollectionNames" type="StringVec"> rawdata data pedestal noise status </parameter-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> TrackerRawData TrackerData </parameter-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="tracking-output.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
</processor>

</marlin>
