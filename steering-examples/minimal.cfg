###############################################################
#
# Example Configuration file for installing the ILC Software
#
# Author: Jan Engels, DESY
# Date: Jan, 2007
#
# Editor: Igor Rubinsky, DESY
# Data: June, 2010 
#
###############################################################


# ILCSoft( "install path for ILC software")
ilcsoft = ILCSoft("/data/TestBeam/Analysis/ilcsoft/")

# Python variable for referring the ILC Home directory
# only for SL3 and SL4 users
ilcPath = "/afs/desy.de/group/it/ilcsoft/v01-08-01/"


ilcsoft.downloadType = "svn"

# Global variables              # default values are shown between ( )
# ilcsoft.debug = True           # build in debug mode (False)
ilcsoft.buildDoc = False       # build documentation (True)
# ilcsoft.downloadOnly = True    # download software only (False)
ilcsoft.useCMake = True         # use CMake building tool (False)

# ilcsoft.env["CXX"]="g++"
# ilcsoft.env["CC"]="gcc"
# ilcsoft.env["FC"]="g77"
# ilcsoft.env["FC"]="gfortran"


# Marlin
ilcsoft.install( Marlin( "v00-11" ))
# ilcsoft.module("Marlin").download.type="svn"

# ilcsoft.module("Marlin").envcmake["MARLIN_GUI"] = 1


# QT (can be auto-detected if qmake is found in your PATH)
#ilcsoft.install( QT( "4.3.1" ))    # takes ~3 hours to compile on an Intel P4 3GHz!!
ilcsoft.link( QT( ilcPath + "QT/4.2.2" ))


# Marlin Packages
# ilcsoft.install( MarlinReco( "HEAD" ))
ilcsoft.link( MarlinUtil( ilcPath + "MarlinUtil/v00-14-01" ))
# ilcsoft.install( MarlinUtil( "v00-14-01" ))



# ilcsoft.install( CEDViewer( "HEAD" ))
# ilcsoft.install( PandoraPFA( "HEAD" ))
# ilcsoft.install( SiliconDigi( "HEAD" ))
# ilcsoft.install( LCFIVertex( "HEAD" ))


## Eutelescope specific
# ilcsoft.install( Eutelescope( "v00-00-08-m26"   ))
# ilcsoft.install( Eutelescope( "v00-00-08-toto"   ))
# ilcsoft.install(Eutelescope( "v00-00-08-plugin"))
ilcsoft.install( Eutelescope( "HEAD"   ))
# ilcsoft.module("Eutelescope").download.type="svn"

ilcsoft.module("Eutelescope").buildWith(["EUDAQ", "ROOT", "GEAR", "RAIDA", "MarlinUtil", "GSL", "LCCD", "CLHEP" ])
ilcsoft.module("Eutelescope").env["EUDAQ_HOME"]="/data/TestBeam/Analysis/eudaq/trunk"
ilcsoft.module("Eutelescope").env["EUDAQ"]="/data/TestBeam/Analysis/eudaq/trunk"
ilcsoft.module("Eutelescope").envpath["PATH"].append("$EUDAQ/main/")
ilcsoft.module("Eutelescope").envpath["LD_LIBRARY_PATH"].append("$EUDAQ/main/")
#ilcsoft.module("Eutelescope").env["ROOT_HOME"]="$ROOTSYS"

# ilcsoft.install( Overlay( "HEAD" ))
# ilcsoft.install( Overlay( "v00-07-01" ))
ilcsoft.link( Overlay( ilcPath + "Overlay/v00-07-01" ))


# ilcsoft.install( MarlinTPC( "HEAD" ))

# Example of a custom Marlin package
# pandora = MarlinPKG( "PandoraPFA", "v01-01-01" )
# ilcsoft.install( pandora )
# pandora.download.root = "marlinreco"
# pandora.addDependency( [ "Marlin", "MarlinUtil", "LCIO" ] )

# GSL
#ilcsoft.install( GSL( "1.8" ))
ilcsoft.link( GSL( ilcPath + "gsl/1.8" ))

# CLHEP
#ilcsoft.install( CLHEP( "2.0.4.2" ))
#ilcsoft.install( HepPDT( "2.03.00" ))
ilcsoft.link( CLHEP( ilcPath + "CLHEP/2.0.4.2" ))

# CERNLIB
# ilcsoft.install( CERNLIB( "2006" ))
ilcsoft.link( CERNLIB( ilcPath + "cernlib/2006" ))


# CED
#ilcsoft.install( CED( "v00-07" ))
ilcsoft.link( CED( ilcPath + "CED/v00-07" ))

# LCIO
# ilcsoft.install( LCIO( "v01-12-03" ))
ilcsoft.link( LCIO( ilcPath + "lcio/v01-12-03" ))

# GEAR
#ilcsoft.install( GEAR( "v00-13" ))
ilcsoft.link( GEAR( ilcPath + "gear/v00-13" ))

# LCCD
#ilcsoft.install( LCCD( "v00-06-01" ))
ilcsoft.link( LCCD( ilcPath + "lccd/v00-06-01"))
#ilcsoft.use( LCCD( ilcPath + "lccd/v00-06-01"))


# either both CondDBMySQL+MySQL or none
# /*
# CondDBMySQL
# ilcsoft.install( CondDBMySQL( "CondDBMySQL_ILC-0-7-3" ))
ilcsoft.link( CondDBMySQL( ilcPath + "CondDBMySQL/CondDBMySQL_ILC-0-7-3"  ))
#
# MySQL
ilcsoft.link( MySQL( ilcPath + "mysql/5.0.45" ))
# */


# RAIDA
# ilcsoft.install( RAIDA( "v01-04-03" ))
ilcsoft.link( RAIDA( ilcPath + "RAIDA/v01-04-03" ))

# ROOT
ilcsoft.link( ROOT( ilcPath + "root/5.26.00b" ))

# Java (can be auto-detected if javac is found in your PATH)
if( ilcsoft.os.isSL(3) ):
    ilcsoft.link( Java( ilcPath + "java/1.5.0" ))
if( ilcsoft.os.isSL(4) or ilcsoft.os.isSL(5) ):
    ilcsoft.link( Java( ilcPath + "java/1.6.0" ))

# Mokka
# ilcsoft.link( Mokka( ilcPath + "Mokka/mokka-06-06-p03" ))

# Geant4
# ilcsoft.link( Geant4( "/afs/desy.de/group/it/ilcsoft/geant4/9.1" ))
# if you don't have an env.sh script in the 'use/link' directory specified above for
# configuring geant4 use the following line (full path!) for defining another location:
# ilcsoft.module( "Geant4" ).env["G4ENV_INIT"]="/afs/desy.de/group/it/ilcsoft/geant4/env_9.1.sh"

# AIDAJNI
# ilcsoft.install( AIDAJNI( "3.2.3" ))
# ilcsoft.link( AIDAJNI( "/opt/products/AIDAJNI/3.2.3" ))

# JAIDA
# ilcsoft.install( JAIDA( "3.2.3" ))
# ilcsoft.link( JAIDA( "/opt/products/JAIDA/3.2.3" ))

# CMake (can be auto-detected if cmake is found in your PATH)
# ilcsoft.install( CMake( "2.6.2" ))
ilcsoft.use( CMake( "/afs/desy.de/group/it/ilcsoft/CMake/2.6.2" ))

# CMakeModules
ilcsoft.install( CMakeModules( "HEAD" ))
# ilcsoft.link( CMakeModules( ilcPath + "CMakeModules/v01-07" ))

# end of configuration file

