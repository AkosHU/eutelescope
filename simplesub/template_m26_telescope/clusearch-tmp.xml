<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->


<!--

==========================================================================================
Steering file template for the pysub framework

==> clusearch-tmp.xml <===

Author: Antonio Bulgheroni, INFN <mailto:antonio.bulgheroni@gmail.com>
Version: $Id: clusearch-tmp.xml,v 1.9 2009-08-01 10:41:44 bulgheroni Exp $
==========================================================================================

-->

<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

  <execute>
    <processor name="AIDA"/>
      <processor name="FilterZSDataM26"/>
      <processor name="M26Clustering"/>
      <processor name="FilterZSDataAPIX"/>
      <processor name="APIXClustering"/>
    <processor name="Save"/>
  </execute>

  <global>
    <parameter name="LCIOInputFiles"> @ResultPath@/run@RunNumber@.slcio </parameter>
    <parameter name="GearXMLFile" value="@GearFile@"/>
    <parameter name="MaxRecordNumber" value="1000000000"/>
    <parameter name="SkipNEvents" value="0"/>
    <parameter name="SupressCheck" value="false"/>
    <parameter name="Verbosity" value="MESSAGE"/>
  </global>
  
  <processor name="FilterZSDataM26" type="EUTelFilterZSDataProcessor">
    <parameter name="_filteredZSDataCollectionName" type="string" value="filtered_zsdata_m26"/>
    <parameter name="ZSDataCollectionName" type="string" value="zsdata_m26" />
    <parameter name="NoiseOccupancyCollection" type="string" value="noiseocc" />
    <parameter name="NoiseOccupancyDBFile" type="string" value="@DbPath@/run@RunNumber@-noiseocc-db.slcio"/>
    <parameter name="Threshold" type="double" value="@TelOccupancyThresh@" />
  </processor>
  
  <processor name="M26Clustering" type="EUTelM26ClusteringProcessor">
    <!--This is the name of the histogram information file-->
    <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData"> filtered_zsdata_m26 </parameter>
    <parameter name="HistoInfoFileName" type="string" value="@HistoInfo@"/>
  </processor>

  <processor name="FilterZSDataAPIX" type="EUTelFilterZSDataProcessor">
    <parameter name="_filteredZSDataCollectionName" type="string" value="filtered_zsdata_apix"/>
    <parameter name="ZSDataCollectionName" type="string" value="zsdata_apix" />
    <parameter name="NoiseOccupancyCollection" type="string" value="noiseocc" />
    <parameter name="NoiseOccupancyDBFile" type="string" value="@DbPath@/run@RunNumber@-noiseocc-db.slcio"/>
    <parameter name="Threshold" type="double" value="@DUTOccupancyThresh@" />
  </processor>

  <processor name="APIXClustering" type="EUTelAPIXClusteringProcessor">
    <!--This is the name of the histogram information file-->
    <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData"> filtered_zsdata_apix </parameter>
    <parameter name="HistoInfoFileName" type="string" value="@HistoInfo@"/>
  </processor>
  
  <processor name="AIDA" type="AIDAProcessor">
    <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
    <!-- compression of output file 0: false >0: true (default) -->
    <parameter name="Compress" type="int" value="1"/>
    <!-- filename without extension-->
    <parameter name="FileName" type="string" value= "@HistoPath@/run@RunNumber@-clu-histo"/>
    <!-- type of output file xml (default) or root ( only OpenScientist)-->
    <parameter name="FileType" type="string" value="root"/>
  </processor>

 <processor name="Mimosa26EUTelAutoPedestalNoiseProcessor" type="EUTelAutoPedestalNoiseProcessor">
 <!--EUTelAutoPedestalNoiseProcessor produces initial pedestal / noise / status with user provided values-->
  <!--Noise local collection-->
  <parameter name="NoiseCollectionName" type="string" lcioOutType="TrackerData"> m26_noise </parameter>
  <!--Pedestal local collection-->
  <parameter name="PedestalCollectionName" type="string" lcioOutType="TrackerData"> m26_pedestal </parameter>
  <!--Pixel status collection-->
  <parameter name="StatusCollectionName" type="string" lcioOutType="TrackerRawData"> m26_status </parameter>
  <!--The initial value of noise (one value for detector)-->
  <parameter name="InitNoiseValue" type="FloatVec"> 0.01 0.01 0.01 0.01 0.01 0.01</parameter>
  <!--The initial value of pedestal (one value for detector)-->
  <parameter name="InitPedestalValue" type="FloatVec"> 0 0 0 0 0 0</parameter>
  <!--The maximum pixel along x (default 255, one value per detector)-->
  <parameter name="MaxXVector" type="IntVec"> 1151 1151 1151 1151 1151 1151</parameter>
  <!--The maximum pixel along y (default 255, one value per detector)-->
  <parameter name="MaxYVector" type="IntVec"> 575 575 575 575 575 575</parameter>
  <!--The minimum pixel along x (default 0, one value per detector)-->
  <parameter name="MinXVector" type="IntVec"> 0 0 0 0 0 0</parameter>
  <!--The minimum pixel along y (default 0, one value per detector)-->
  <parameter name="MinYVector" type="IntVec"> 0 0 0 0 0 0</parameter>
  <!--The sensorID for the generated collection (one per detector)-->
  <parameter name="SensorIDVec" type="IntVec"> 0 1 2 3 4 5 </parameter>
</processor>


  <processor name="Correlator" type="EUTelCorrelator">
    <!--EUTelCorrelator fills histograms with correlation plots-->
    <!--Cluster (pulse) collection name-->
    <parameter name="InputClusterCollectionName" type="string" lcioInType="TrackerPulse"> cluster </parameter>
    <!--Hit collection name-->
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
  </processor>


  <processor name="Save" type="EUTelOutputProcessor">
    <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
    <!--drops the named collections from the event-->
    <!--<parameter name="DropCollectionNames" type="StringVec"> 
           rawdata status noise pedestal data zsdata
           rawdata_apix status_apix  noise_apix  pedestal_apix  data_apix 
	
    </parameter>-->
    <parameter name="DropCollectionNames" type="StringVec"> </parameter>
    <!--drops all collections of the given type from the event-->
    <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
    <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
    <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
    <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
    <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
    <parameter name="KeepCollectionNames" type="StringVec"> cluster_apix </parameter>
    <!-- name of output file -->
    <parameter name="LCIOOutputFile" type="string" value="@ResultPath@/run@RunNumber@-clu-p.slcio"/>
    <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
    <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
    <!--Set it to true to remove intermediate EORE in merged runs-->
    <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
    <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
    <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
  </processor>

</marlin>
